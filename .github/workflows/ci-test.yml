##
## Copyright (c) 2022-2023 Geosiris.
## SPDX-License-Identifier: Apache-2.0
##
name: Tests

on:
  push:
  pull_request:

jobs:
  generate:
    name: Generate etptypes code
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Download ETP file
        run : wget http://geosiris.com/wp-content/uploads/2022/09/etp/${{ secrets.ETP_FILE_NAME}} -P ${{ github.workspace }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pydantic typingx avro-to-python-etp

      - name: Translate avpr to avsc
        run: |
          avpr-to-avsc ${{ secrets.ETP_FILE_NAME}}

      - name: Generate classes
        run: |
          avro-to-python-etp output/Energistics tmp --pip etptypes --package_version ${{ secrets.PACKAGE_VERSION }}

      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: etptypes-generated-artifact
          retention-days: 1
          path: |
            ${{ github.workspace }}/tmp/etptypes/*

  unit-tests:
    needs: generate
    
    name: Unit tests (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.9", "3.10"]

    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        uses: ./.github/actions/prepare-poetry
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: etptypes-generated-artifact
          path: etptypes/

      - name: Run pytest
        run: poetry run pytest --cov=etptypes --cov-report=xml --junitxml=pytest.xml
    
      - name: Upload pytest artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: Unit Test Results (Python ${{ matrix.python-version }})
          path: pytest.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.xml
          fail_ci_if_error: true
