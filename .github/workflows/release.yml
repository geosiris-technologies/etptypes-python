##
## Copyright (c) 2022-2023 Geosiris.
## SPDX-License-Identifier: Apache-2.0
##
name: Build-and-Push

on:
  push:
    tags:
      # Run when a tag is pushed with a valid semantic version number
      - 'v[0-9]+.[0-9]+.[0-9]+'

env:
  GENERATED_CODE_FOLDER: etptypes
  PYTHON_VERSION: 3.9

jobs:
  build:
    name: Building generated code
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v4

      - name: Generate code from avro-to-python-etp
        uses: ./.github/actions/generate
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          dest-folder: ${{ env.GENERATED_CODE_FOLDER }}
          etp-file-name: ${{ secrets.ETP_FILE_NAME }}

      - name: üêç Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: üíæ Cache Poetry dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: poetry-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-${{ runner.os }}-

      - name: üì¶ Install poetry
        uses: abatilo/actions-poetry@v4
        with:
          poetry-version: '2.1.1'

      - name: Python Black
        run: |
          cd ${{ env.GENERATED_CODE_FOLDER }}
          poetry add -D black
          poetry run black etptypes

      - name: üì¶ Install poetry-dynamic-versioning
        run: poetry add -D poetry-dynamic-versioning[plugin]

      - name: üì• Install dependencies
        run: poetry install --no-interaction --no-root

      - name: üõ†Ô∏è Build the package
        run: |
          cd ${{ env.GENERATED_CODE_FOLDER }}
          rm pyproject.toml
          cp ${{ github.workspace }}/pyproject.toml .
          cp ${{ github.workspace }}/LICENSE .
          cp ${{ github.workspace }}/README.md .
          poetry build

      - name: üöÄ Publish to PyPI
        run: |
          cd ${{ env.GENERATED_CODE_FOLDER }}
          poetry config pypi-token.pypi ${{ secrets.POETRY_PYPI_TOKEN_PASSWORD }}
          poetry publish